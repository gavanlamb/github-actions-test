name: Release
run-name: 1.${{ github.event.number }}.${{ github.run_number }}.${{ github.run_attempt }}

on:
  push:
    branches: [ "main" ]
  pull_request:

permissions:
  contents: read
  issues: read
  checks: write
  pull-requests: write

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    concurrency:
      cancel-in-progress: true
      group: build
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Output event
        run: echo '${{ toJSON(github) }}'
      - name: Build base image
        run: docker build -f Dockerfile --target base -t base:1.0.0.0 --build-arg BUILD_NUMBER=1.0.0.0 .
      - name: Build test image
        run: docker build -f Dockerfile --target unit-tests -t unit-tests:1.0.0.0 --build-arg BUILD_NUMBER=1.0.0.0 .
      - name: Run unit tests
        run: docker run --rm -v ${{ github.workspace }}/artifacts/test/results:/artifacts/test/results unit-tests:1.0.0.0
      - name: Publish Test Results
        uses: EnricoMi/publish-unit-test-result-action@v2
        # if: always() and `Run unit tests`
        with:
          files: |
            ${{ github.workspace }}/artifacts/test/results/*.trx
      - name: Publish Coverage Report
        uses: irongut/CodeCoverageSummary@v1.3.0
        with:
          filename: ${{ github.workspace }}/artifacts/test/results/**/coverage.cobertura.xml
          badge: true
          fail_below_min: true
          format: markdown
          hide_branch_rate: false
          hide_complexity: true
          indicators: true
          output: both
          # thresholds: '60 80'
      - name: Output folder contents
        run: ls -al ${{ github.workspace }}/artifacts/test/results
      - name: Build api image
        run: docker build -f Dockerfile --target api -t api:1.0.0.0 --build-arg BUILD_NUMBER=1.0.0.0 .


# Try and get powershell core working on agent
# defaults:
#   run:
#     shell: powershell
# permissions:
# concurrency: 
#   cancel-in-progress: false
#   group: ${{ github.ref }}
